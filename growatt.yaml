substitutions:
  modbus_update_interval: 5s
  skip_updates_slow: 11

esphome:
  name: growatt
  friendly_name: Growatt
  on_boot:
    priority: 600
    then:
      - lambda: |-
          delay(60000);

esp8266:
  board: esp07s

# Disable logging, modbus is using uart
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: "*INSERT YOUR OWN KEY HERE*"

ota:
  - platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Growatt Fallback Hotspot"
    password: "12345678"

# Enable Web server
web_server:
  port: 80

captive_portal:

time:
  - platform: homeassistant
    id: homeassistant_time

output:
# Blue Led
  - id: light_bl
    platform: gpio
    pin: 16
# Green Led
  - id: light_gr
    platform: gpio
    pin: 0
# Red Led
  - id: light_rd
    platform: gpio
    pin: 2

uart:
  - id: uart_id1
    baud_rate: 115200
    tx_pin: GPIO1
    rx_pin: GPIO3

modbus:
  id: modbus1
  uart_id: uart_id1
  flow_control_pin: GPIO4

modbus_controller:
  - id: growatt
    ## the Modbus device addr
    address: 0x1
    modbus_id: modbus1
    setup_priority: -10
    update_interval: ${modbus_update_interval}

number:
  - platform: modbus_controller
    modbus_controller_id: growatt
    id: remote_on_off
    name: "Remote On/Off" # Inverter Off:0, Inverter On:1, BDC Off: 2, BDC On: 3
    address: 0
    register_type: holding
    value_type: U_WORD
    min_value: 0
    max_value: 3
    step: 1
    icon: mdi:eye
    entity_category: diagnostic

  - platform: modbus_controller
    modbus_controller_id: growatt
    id: active_power_rate
    name: "Active Power Rate"
    address: 3
    register_type: holding
    value_type: U_WORD
    min_value: 0
    max_value: 100
    step: 1
    unit_of_measurement:  "%"
    entity_category: config

sensor:
  - platform: modbus_controller
    id: status
    name: "Status code"
    # skip_updates: $skip_updates_slow
    address: 0
    register_type: "read"
    value_type: U_WORD
    disabled_by_default: true
    accuracy_decimals: 0

  - platform: modbus_controller
    name: "Input Power"
    address: 1
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    icon: mdi:solar-power-variant
    value_type: U_DWORD
    accuracy_decimals: 0
    filters:
      - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 voltage"
    address: 3
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 0
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 current"
    address: 4
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 input power"
    id: pv1_power
    address: 5
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    value_type: U_DWORD
    accuracy_decimals: 0
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 voltage"
    address: 7
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 0
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 current"
    address: 8
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 input power"
    id: pv2_power
    address: 9
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    value_type: U_DWORD
    accuracy_decimals: 0
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Output power"
    address: 35
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    value_type: U_DWORD
    accuracy_decimals: 0
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid frequency"
    address: 37
    register_type: "read"
    unit_of_measurement: Hz
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.01

  - platform: modbus_controller
    name: "Grid L1 voltage"
    address: 38
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L1 current"
    address: 39
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L1 power"
    address: 40
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L2 voltage"
    address: 42
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L2 current"
    address: 43
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L2 power"
    address: 44
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L3 voltage"
    address: 46
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L3 current"
    address: 47
    register_type: "read"
    unit_of_measurement: A
    device_class: current
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid L3 power"
    address: 48
    register_type: "read"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: template
    name: "PV input power"
    unit_of_measurement: W
    device_class: power
    state_class: measurement
    accuracy_decimals: 0
    lambda: |-
      return float((id(pv1_power).state + id(pv2_power).state));

  - platform: modbus_controller
    name: "Grid RS voltage"
    address: 50
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid ST voltage"
    address: 51
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Grid RT voltage"
    address: 52
    register_type: "read"
    unit_of_measurement: V
    device_class: voltage
    state_class: measurement
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1


  - platform: modbus_controller
    name: "Today energy generated"
    skip_updates: $skip_updates_slow
    address: 53
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Total energy generated"
    skip_updates: $skip_updates_slow
    address: 55
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Work time total"
    skip_updates: $skip_updates_slow
    address: 57
    register_type: "read"
    unit_of_measurement: s
    state_class: total_increasing
    device_class: duration
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.5

  - platform: modbus_controller
    name: "PV1 energy today"
    skip_updates: $skip_updates_slow
    address: 59
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV1 energy total"
    skip_updates: $skip_updates_slow
    address: 61
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 energy today"
    skip_updates: $skip_updates_slow
    address: 63
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV2 energy total"
    skip_updates: $skip_updates_slow
    address: 65
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "PV energy total"
    skip_updates: $skip_updates_slow
    address: 91
    register_type: "read"
    unit_of_measurement: kWh
    state_class: total_increasing
    device_class: energy
    icon: mdi:solar-power
    value_type: U_DWORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1

  - platform: modbus_controller
    name: "Inverter temperature"
    address: 93
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1
    # skip_updates: $skip_updates_slow

  - platform: modbus_controller
    name: "Inverter IPM temperature"
    address: 94
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1
    # skip_updates: $skip_updates_slow

  - platform: modbus_controller
    name: "Inverter boost temperature"
    address: 95
    register_type: "read"
    unit_of_measurement: °C
    device_class: temperature
    state_class: measurement
    entity_category: diagnostic
    icon: mdi:thermometer
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
    - multiply: 0.1
    # skip_updates: $skip_updates_slow

  - platform: modbus_controller
    name: "Derating mode code"
    id: derating_mode
    address: 104
    register_type: "read"
    state_class: measurement
    entity_category: diagnostic
    value_type: U_WORD
    disabled_by_default: true
    # skip_updates: $skip_updates_slow

  - platform: uptime
    name: " Uptime"
    update_interval: 60s

  - platform: wifi_signal
    name: " Wi-Fi Signal"
    update_interval: 60s

# select:
#   - platform: modbus_controller
#     name: "AC Charging"
#     icon: mdi:battery-charging-100
#     address: 1092
#     value_type: U_WORD
#     optionsmap:
#       "Disabled": 0
#       "Enabled": 1
#     skip_updates: $skip_updates_slow

#   - platform: modbus_controller
#     name: "Inverter Priority"
#     icon: mdi:arrow-decision-outline
#     address: 1044
#     value_type: U_WORD
#     optionsmap:
#       "Load First": 0
#       "Battery First": 1
#       "Grid First": 2
#     skip_updates: $skip_updates_slow

text_sensor:
  - platform: wifi_info
    ip_address:
      name: " IP Address"
    ssid:
      name: " Wi-Fi SSID"
    bssid:
      name: " Wi-Fi BSSID"
  
  - platform: version
    name: "ESPHome Version"

  - platform: template
    name: "Status"
    icon: mdi:eye
    entity_category: diagnostic
    lambda: |-
      if ((id(status).state) == 1) {
        return {"Normal"};
      } else if ((id(status).state) == 0)  {
        return {"Standby"};
      } else if ((id(status).state) == 2)  {
        return {"Discharge"};
      } else if ((id(status).state) == 3)  {
        return {"Fault"};
      } else if ((id(status).state) == 4)  {
        return {"Flash"};
      } else if ((id(status).state) == 5)  {
        return {"PV Charging"};
      } else if ((id(status).state) == 6)  {
        return {"AC Charging"};
      } else if ((id(status).state) == 7)  {
        return {"Combined Charging"};
      } else if ((id(status).state) == 8)  {
        return {"Combined Charging & Bypass"};
      } else if ((id(status).state) == 9)  {
        return {"PV Charging & Bypass"};
      } else if ((id(status).state) == 10)  {
        return {"AC Charging & Bypass"};
      } else if ((id(status).state) == 11)  {
        return {"Bypass"};
      } else if (id(status).state == 12)  {
        return {"PV Charge and Discharge"};
      } else {
        return {"Unknown"};
      }

  - platform: template
    name: "Derating mode"
    entity_category: diagnostic
    lambda: |-
      switch (int(id(derating_mode).state)) {
        case 0:  return std::string("No derate");
        case 1:  return std::string("PV");
        case 2:  return std::string("2*");
        case 3:  return std::string("Vac");
        case 4:  return std::string("Fac");
        case 5:  return std::string("Tboost");
        case 6:  return std::string("Tinv");
        case 7:  return std::string("Control");
        case 8:  return std::string("8*");
        case 9:  return std::string("OverBack ByTime");
        default: return std::string("Derating mode " + to_string(id(derating_mode).state));
      }

  - platform: modbus_controller
    name: "Fault code"
    address: 105
    register_type: "read"
    icon: mdi:eye
    entity_category: diagnostic
    raw_encode: HEXBYTES
    lambda: |-
      uint16_t value = modbus_controller::word_from_hex_str(x, 0);
      switch (value) {
        case 0:  return std::string("No error");
        case 24: return std::string("Auto test failed");
        case 25: return std::string("No AC connection");
        case 26: return std::string("PV isolation low");
        case 27: return std::string("Residual I high");
        case 28: return std::string("Output high DCI");
        case 29: return std::string("PV voltage high");
        case 30: return std::string("AC voltage out of range");
        case 31: return std::string("AC frequency out of range");
        case 32: return std::string("Module too hot");
        // case 1~23 " Error: 99+x
        default: return std::string("Fault code: " + to_string(value));
      }
      return x;
